[{"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\index.js":"1","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\App.jsx":"2","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\api\\index.js":"3","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\ListFilms\\index.js":"4","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\ListFilms\\ListFilms.jsx":"5","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Film\\index.js":"6","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Film\\Film.jsx":"7","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Character\\Character.jsx":"8","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Planet\\index.js":"9","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Planet\\Planet.jsx":"10","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Character\\index.js":"11","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Specie\\Specie.jsx":"12","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Specie\\index.js":"13","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Starship\\index.js":"14","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Starship\\Starship.jsx":"15","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Vehicle\\index.js":"16","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Vehicle\\Vehicle.jsx":"17"},{"size":312,"mtime":1615719694110,"results":"18","hashOfConfig":"19"},{"size":3008,"mtime":1615791003490,"results":"20","hashOfConfig":"19"},{"size":124,"mtime":1615746445488,"results":"21","hashOfConfig":"19"},{"size":33,"mtime":1615643958216,"results":"22","hashOfConfig":"19"},{"size":1365,"mtime":1615746947557,"results":"23","hashOfConfig":"19"},{"size":28,"mtime":1615458078694,"results":"24","hashOfConfig":"19"},{"size":4081,"mtime":1615747310882,"results":"25","hashOfConfig":"19"},{"size":3727,"mtime":1615798588518,"results":"26","hashOfConfig":"19"},{"size":30,"mtime":1615722109207,"results":"27","hashOfConfig":"19"},{"size":3095,"mtime":1615729716700,"results":"28","hashOfConfig":"19"},{"size":33,"mtime":1615661170869,"results":"29","hashOfConfig":"19"},{"size":3334,"mtime":1615799222291,"results":"30","hashOfConfig":"19"},{"size":30,"mtime":1615726131282,"results":"31","hashOfConfig":"19"},{"size":32,"mtime":1615725139997,"results":"32","hashOfConfig":"19"},{"size":3693,"mtime":1615798709843,"results":"33","hashOfConfig":"19"},{"size":31,"mtime":1615725626679,"results":"34","hashOfConfig":"19"},{"size":3178,"mtime":1615799466574,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ki9eot",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\index.js",[],["73","74","75","76","77","78"],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\App.jsx",["79","80"],"/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { getData } from './api';\nimport { ListFilms } from './Components/ListFilms';\nimport { Film } from './Components/Film';\nimport { Character } from './Components/Character';\nimport { Planet } from './Components/Planet';\nimport { Specie } from './Components/Specie';\nimport { Starship } from './Components/Starship';\nimport { Vehicle } from './Components/Vehicle';\n\nfunction App() {\n  const [allFilms, setAllFilms] = useState([]);\n  const [currentListFilms, setCurrentListFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [selectedObject, setSelectedObject] = useState({});\n\n  useEffect(() => {\n    getData('films')\n      .then((res) => res.json())\n      .then((res) => {\n        setCurrentListFilms(res.results);\n        setAllFilms(res.results);\n      });\n  }, []);\n\n  useEffect(() => {\n    setCurrentListFilms(allFilms.filter(({\n      title,\n      episode_id,\n      opening_crawl,\n      director,\n      producer,\n      release_date,\n    }) => (\n      (title + title + episode_id + opening_crawl\n        + director\n        + producer\n        + release_date).toLowerCase()\n        .includes(query.toLowerCase()))));\n  }, [query]);\n\n  const getNewObject = (url) => {\n    console.log('current url', url);\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setSelectedObject(res);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"title\">Star Wars</h1>\n        <input className=\"search\" type=\"search\" name=\"searchFilm\" id=\"\" placeholder=\"Search for a movie\" value={query} onChange={(event) => setQuery(event.target.value)} />\n        <Switch>\n          <Redirect exact from=\"/films\" to=\"/\" />\n          <Route exact path=\"/\">\n            <ListFilms\n              currentListFilms={currentListFilms}\n              setCurrentListFilms={setCurrentListFilms}\n              setSelectedObject={setSelectedObject}\n              getNewObject={getNewObject}\n            />\n          </Route>\n          <Route path=\"/film\">\n            <Film {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n          <Route path=\"/people\">\n            <Character {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n          <Route path=\"/planet\">\n            <Planet {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n          <Route path=\"/specie\">\n            <Specie {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n          <Route path=\"/starship\">\n            <Starship {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n          <Route path=\"/vehicle\">\n            <Vehicle {...selectedObject} getNewObject={getNewObject} />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\api\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\ListFilms\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\ListFilms\\ListFilms.jsx",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Film\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Film\\Film.jsx",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Character\\Character.jsx",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Planet\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Planet\\Planet.jsx",["81"],"/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './planet.scss';\n\nexport const Planet = ({\n  name,\n  rotation_period,\n  orbital_period,\n  diameter,\n  climate,\n  gravity,\n  terrain,\n  surface_water,\n  population,\n  residents,\n  films,\n  getNewObject,\n}) => {\n  console.log('planets', name,\n    rotation_period,\n    orbital_period);\n\n  return (\n    <div className=\"fcols fx-row\">\n      <div className=\"fLeft\">\n        <div className=\"fImg img-wide\">\n          <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n        </div>\n      </div>\n      <div className=\"fright fx-1 fx-col\">\n        <h1 className=\"short-title fx-1\">\n          <div>\n            <span>{name}</span>\n          </div>\n        </h1>\n\n        <ul className=\"short-list\">\n          <li>\n            <span>Rotation period:</span>\n            {rotation_period}\n          </li>\n          <li>\n            <span>Orbital period:</span>\n            {orbital_period}\n          </li>\n          <li>\n            <span>Diameter:</span>\n            {diameter}\n          </li>\n          <li>\n            <span>Climate:</span>\n            {climate}\n          </li>\n          <li>\n            <span>Gravity:</span>\n            {gravity}\n          </li>\n          <li>\n            <span>Terrain:</span>\n            {terrain}\n          </li>\n          <li>\n            <span>Surface_water:</span>\n            {surface_water}\n          </li>\n          <li>\n            <span>Population:</span>\n            {population}\n          </li>\n          <li>\n            <span>Residents:</span>\n            {residents.map((item) => (\n              <Link\n                to=\"/people\"\n                className=\"linkItem\"\n                onClick={() => {\n                  getNewObject(item.slice(21, item.length - 1));\n                }}\n                key={item.slice(20)}\n              >\n                {item}\n              </Link>\n            ))}\n          </li>\n          <li>\n            <span>Films:</span>\n            {films.map((item) => (\n              <Link\n                to=\"/film\"\n                className=\"linkItem\"\n                onClick={() => {\n                  getNewObject(item.slice(21, item.length - 1));\n                }}\n                key={item.slice(20)}\n              >\n                {item}\n              </Link>\n            ))}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nPlanet.propTypes = {\n  name: PropTypes.string.isRequired,\n  rotation_period: PropTypes.number.isRequired,\n  orbital_period: PropTypes.string.isRequired,\n  diameter: PropTypes.string.isRequired,\n  climate: PropTypes.string.isRequired,\n  gravity: PropTypes.string.isRequired,\n  terrain: PropTypes.string.isRequired,\n  surface_water: PropTypes.string.isRequired,\n  population: PropTypes.string.isRequired,\n  residents: PropTypes.arrayOf(PropTypes.string),\n  films: PropTypes.arrayOf(PropTypes.string),\n  getNewObject: PropTypes.func.isRequired,\n};\n\nPlanet.defaultProps = {\n  films: [],\n  residents: [],\n};\n","D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Character\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Specie\\Specie.jsx",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Specie\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Starship\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Starship\\Starship.jsx",["82"],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Vehicle\\index.js",[],"D:\\work\\GitHub\\workArea\\testTask\\tt_YARANDIN_Inc\\src\\Components\\Vehicle\\Vehicle.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":50,"column":5,"nodeType":"97","messageId":"98","endLine":50,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":54,"column":9,"nodeType":"97","messageId":"98","endLine":54,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":21,"column":3,"nodeType":"97","messageId":"98","endLine":21,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":25,"column":3,"nodeType":"97","messageId":"98","endLine":25,"endColumn":14},"lines-around-directive",["99"],"no-spaced-func",["100"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]