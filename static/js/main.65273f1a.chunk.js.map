{"version":3,"sources":["Components/Loader/Loader.jsx","api/index.js","Components/ListFilms/ListFilms.jsx","Components/Film/Film.jsx","Components/Character/Character.jsx","Components/Planet/Planet.jsx","Components/Specie/Specie.jsx","Components/Starship/Starship.jsx","Components/Vehicle/Vehicle.jsx","App.jsx","index.js"],"names":["Loader","className","BASE_URL","getData","url","id","fetch","ListFilms","currentListFilms","setCurrentListFilms","useState","directionSortTable","setDirectionSortTable","type","onClick","sort","a","b","title","localeCompare","map","film","i","to","episode_id","Film","history","useHistory","selectedObject","setSelectedObject","useEffect","location","pathname","then","res","json","opening_crawl","director","producer","release_date","characters","planets","starships","vehicles","species","Object","keys","length","src","alt","item","slice","Character","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","films","Planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","Specie","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","people","Starship","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","Vehicle","vehicle_class","App","allFilms","setAllFilms","query","setQuery","isLoading","setIsLoading","results","filter","toLowerCase","includes","placeholder","value","onChange","event","target","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65273f1a.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => (\n  <>\n    <div className=\"Loader\">\n      <div className=\"Loader__content\" />\n    </div>\n    <div className=\"text\">Loading...</div>\n  </>\n\n);\n","const BASE_URL = 'https://swapi.dev/api';\n\nexport const getData = (url = '', id = '') => fetch(`${BASE_URL}${url}${id}`);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './ListFilms.scss';\n\nexport const ListFilms = ({\n  currentListFilms,\n  setCurrentListFilms,\n}) => {\n  const [directionSortTable, setDirectionSortTable] = useState('asc');\n\n  const sortFilms = () => {\n    if (directionSortTable === 'desc') {\n      setCurrentListFilms([...currentListFilms.sort((a, b) => (b.title\n        .localeCompare(a.title)))]);\n      setDirectionSortTable('asc');\n    } else {\n      setCurrentListFilms([...currentListFilms.sort((a, b) => (a.title\n        .localeCompare(b.title)))]);\n      setDirectionSortTable('desc');\n    }\n  };\n\n  return (\n    <ol className=\"listFilms\">\n      <h2 className=\"nameFilms\">Name films</h2>\n      <button type=\"button\" className=\"sortFilms\" onClick={sortFilms}>Sort films</button>\n      {currentListFilms.map((film, i) => (\n        <li className=\"listFilms__items\" key={film.episode_id}>\n          <Link to={`/films/${i + 1}`} className=\"tableCell\">{film.title}</Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nListFilms.propTypes = {\n  setCurrentListFilms: PropTypes.func.isRequired,\n  currentListFilms: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n  })).isRequired,\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport './film.scss';\nimport { getData } from '../../api';\nimport { Loader } from '../Loader/Loader';\n\nexport const Film = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n  const {\n    title,\n    episode_id,\n    opening_crawl,\n    director,\n    producer,\n    release_date,\n    characters,\n    planets,\n    starships,\n    vehicles,\n    species,\n  } = selectedObject;\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{title}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>Episode:</span>\n                {episode_id}\n              </li>\n              <li>\n                <span>Description:</span>\n                {opening_crawl}\n              </li>\n              <li>\n                <span>Director:</span>\n                {director}\n              </li>\n              <li>\n                <span>Producer:</span>\n                {producer}\n              </li>\n              <li key={release_date}>\n                <span>Release date:</span>\n                {release_date}\n              </li>\n              <li>\n                <span>Characters:</span>\n                {characters.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    type=\"button\"\n                    className=\"linkItem\"\n                    key={item.slice(20, item.length - 1)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n              <li>\n                <span>Planets:</span>\n                {planets.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    type=\"button\"\n                    className=\"linkItem\"\n                    key={item.slice(20, item.length - 1)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n              <li>\n                <span>Starships:</span>\n                {starships.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    type=\"button\"\n                    className=\"linkItem\"\n                    key={item.slice(20, item.length - 1)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n              <li>\n                <span>Vehicles:</span>\n                {vehicles.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    type=\"button\"\n                    className=\"linkItem\"\n                    key={item.slice(20, item.length - 1)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n              <li>\n                <span>Species:</span>\n                {species.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    type=\"button\"\n                    className=\"linkItem\"\n                    key={item.slice(20, item.length - 1)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader /> }\n    </>\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getData } from '../../api';\nimport { Loader } from '../Loader/Loader';\nimport './character.scss';\n\nexport const Character = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n\n  const {\n    name,\n    height,\n    mass,\n    hair_color,\n    skin_color,\n    eye_color,\n    birth_year,\n    gender,\n    homeworld,\n    films,\n    species,\n    vehicles,\n    starships,\n  } = selectedObject;\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{name}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>height:</span>\n                {height}\n              </li>\n              <li>\n                <span>mass:</span>\n                {mass}\n              </li>\n              <li>\n                <span>hair_color:</span>\n                {hair_color}\n              </li>\n              <li>\n                <span>skin_color:</span>\n                {skin_color}\n              </li>\n              <li>\n                <span>eye_color:</span>\n                {eye_color}\n              </li>\n              <li>\n                <span>birth_year:</span>\n                {birth_year}\n              </li>\n              <li>\n                <span>gender:</span>\n                {gender}\n              </li>\n              <li>\n                <span>homeworld:</span>\n                <Link\n                  to={homeworld.slice(20, homeworld.length - 1)}\n                  className=\"linkItem\"\n                  key={homeworld.slice(20)}\n                >\n                  {homeworld}\n                </Link>\n              </li>\n              <li>\n                <span>Films:</span>\n                {films.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n              <li>\n                <span>Starships:</span>\n                {starships.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                .\n              </li>\n              <li>\n                <span>Vehicles:</span>\n                {vehicles.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                .\n              </li>\n              <li>\n                <span>Species:</span>\n                {species.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader /> }\n    </>\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './planet.scss';\nimport { getData } from '../../api';\nimport { Loader } from '../Loader/Loader';\n\nexport const Planet = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n  const {\n    name,\n    rotation_period,\n    orbital_period,\n    diameter,\n    climate,\n    gravity,\n    terrain,\n    surface_water,\n    population,\n    residents,\n    films,\n  } = selectedObject;\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{name}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>Rotation period:</span>\n                {rotation_period}\n              </li>\n              <li>\n                <span>Orbital period:</span>\n                {orbital_period}\n              </li>\n              <li>\n                <span>Diameter:</span>\n                {diameter}\n              </li>\n              <li>\n                <span>Climate:</span>\n                {climate}\n              </li>\n              <li>\n                <span>Gravity:</span>\n                {gravity}\n              </li>\n              <li>\n                <span>Terrain:</span>\n                {terrain}\n              </li>\n              <li>\n                <span>Surface_water:</span>\n                {surface_water}\n              </li>\n              <li>\n                <span>Population:</span>\n                {population}\n              </li>\n              <li>\n                <span>Residents:</span>\n                {residents.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                .\n              </li>\n              <li>\n                <span>Films:</span>\n                {films.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader />}\n    </>\n\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './specie.scss';\nimport { Loader } from '../Loader/Loader';\nimport { getData } from '../../api';\n\nexport const Specie = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n  const {\n    name,\n    classification,\n    designation,\n    average_height,\n    skin_colors,\n    hair_colors,\n    eye_colors,\n    average_lifespan,\n    homeworld,\n    language,\n    people,\n    films,\n  } = selectedObject;\n\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{name}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>Classification:</span>\n                {classification}\n              </li>\n              <li>\n                <span>Designation:</span>\n                {designation}\n              </li>\n              <li>\n                <span>Average height:</span>\n                {average_height}\n              </li>\n              <li>\n                <span>Skin colors:</span>\n                {skin_colors}\n              </li>\n              <li>\n                <span>Hair colors:</span>\n                {hair_colors}\n              </li>\n              <li>\n                <span>Eye colors:</span>\n                {eye_colors}\n              </li>\n              <li>\n                <span>Average lifespan:</span>\n                {average_lifespan}\n              </li>\n              <li>\n                <span>Home world:</span>\n                <Link\n                  to={homeworld.slice(20, homeworld.length - 1)}\n                  className=\"linkItem\"\n                  key={homeworld.slice(20)}\n                >\n                  {homeworld}\n                </Link>\n              </li>\n              <li>\n                <span>language:</span>\n                {language}\n              </li>\n              <li>\n                <span>People:</span>\n                {people.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                {' '}\n              </li>\n              <li>\n                <span>Films:</span>\n                {films.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader />}\n    </>\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './starship.scss';\nimport { Loader } from '../Loader/Loader';\nimport { getData } from '../../api';\n\nexport const Starship = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n  const {\n    name,\n    model,\n    manufacturer,\n    cost_in_credits,\n    length,\n    max_atmosphering_speed,\n    crew,\n    passengers,\n    cargo_capacity,\n    consumables,\n    hyperdrive_rating,\n    MGLT,\n    starship_class,\n    pilots,\n    films,\n  } = selectedObject;\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{name}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>Model:</span>\n                {model}\n              </li>\n              <li>\n                <span>Manufacturer:</span>\n                {manufacturer}\n              </li>\n              <li>\n                <span>Cost in credits:</span>\n                {cost_in_credits}\n              </li>\n              <li>\n                <span>length:</span>\n                {length}\n              </li>\n              <li>\n                <span>Max atmosphering speed:</span>\n                {max_atmosphering_speed}\n              </li>\n              <li>\n                <span>Crew:</span>\n                {crew}\n              </li>\n              <li>\n                <span>Passengers:</span>\n                {passengers}\n              </li>\n              <li>\n                <span>Cargo capacity:</span>\n                {cargo_capacity}\n              </li>\n              <li>\n                <span>Consumables:</span>\n                {consumables}\n              </li>\n              <li>\n                <span>Hyperdrive rating:</span>\n                {hyperdrive_rating}\n              </li>\n              <li>\n                <span>MGLT:</span>\n                {MGLT}\n              </li>\n              <li>\n                <span>Starship class:</span>\n                {starship_class}\n              </li>\n              <li>\n                <span>Pilots:</span>\n                {pilots.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                .\n              </li>\n              <li>\n                <span>Films:</span>\n                {films.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader />}\n    </>\n\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './vehicle.scss';\nimport { getData } from '../../api';\nimport { Loader } from '../Loader/Loader';\n\nexport const Vehicle = () => {\n  const history = useHistory();\n  const [selectedObject, setSelectedObject] = useState({});\n  const getNewObject = (url) => {\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n  };\n\n  useEffect(() => {\n    getNewObject(history.location.pathname);\n  }, []);\n  const {\n    name,\n    model,\n    manufacturer,\n    cost_in_credits,\n    length,\n    max_atmosphering_speed,\n    crew,\n    passengers,\n    cargo_capacity,\n    consumables,\n    vehicle_class,\n    pilots,\n    films,\n  } = selectedObject;\n  return (\n    <>\n      {Object.keys(selectedObject).length > 0 ? (\n        <div className=\"fcols fx-row\">\n          <div className=\"fLeft\">\n            <div className=\"fImg img-wide\">\n              <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n            </div>\n          </div>\n          <div className=\"fright fx-1 fx-col\">\n            <h1 className=\"short-title fx-1\">\n              <div>\n                <span>{name}</span>\n              </div>\n            </h1>\n\n            <ul className=\"short-list\">\n              <li>\n                <span>Model:</span>\n                {model}\n              </li>\n              <li>\n                <span>Manufacturer:</span>\n                {manufacturer}\n              </li>\n              <li>\n                <span>Cost in credits:</span>\n                {cost_in_credits}\n              </li>\n              <li>\n                <span>length:</span>\n                {length}\n              </li>\n              <li>\n                <span>Max atmosphering speed:</span>\n                {max_atmosphering_speed}\n              </li>\n              <li>\n                <span>Crew:</span>\n                {crew}\n              </li>\n              <li>\n                <span>Passengers:</span>\n                {passengers}\n              </li>\n              <li>\n                <span>Cargo capacity:</span>\n                {cargo_capacity}\n              </li>\n              <li>\n                <span>Consumables:</span>\n                {consumables}\n              </li>\n              <li>\n                <span>Vehicle class:</span>\n                {vehicle_class}\n              </li>\n              <li>\n                <span>Pilots:</span>\n                {pilots.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n                .\n              </li>\n              <li>\n                <span>Films:</span>\n                {films.map((item) => (\n                  <Link\n                    to={item.slice(20, item.length - 1)}\n                    className=\"linkItem\"\n                    key={item.slice(20)}\n                  >\n                    {item}\n                  </Link>\n                ))}\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : <Loader />}\n    </>\n  );\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { Loader } from './Components/Loader/Loader';\nimport { getData } from './api';\nimport { ListFilms } from './Components/ListFilms';\nimport { Film } from './Components/Film';\nimport { Character } from './Components/Character';\nimport { Planet } from './Components/Planet';\nimport { Specie } from './Components/Specie';\nimport { Starship } from './Components/Starship';\nimport { Vehicle } from './Components/Vehicle';\n\nfunction App() {\n  const [allFilms, setAllFilms] = useState([]);\n  const [currentListFilms, setCurrentListFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(false);\n    getData('/films/')\n      .then((res) => res.json())\n      .then((res) => {\n        setCurrentListFilms(res.results);\n        setAllFilms(res.results);\n      });\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    setCurrentListFilms(allFilms.filter(({\n      title,\n    }) => (\n      (title).toLowerCase()\n        .includes(query.toLowerCase()))));\n  }, [query]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"title\">Star Wars</h1>\n        <input className=\"search\" type=\"search\" name=\"searchFilm\" id=\"\" placeholder=\"Search for a movie\" value={query} onChange={(event) => setQuery(event.target.value)} />\n        {isLoading ? (\n          <Switch>\n            <Route exact path=\"/\">\n              <ListFilms\n                currentListFilms={currentListFilms}\n                setCurrentListFilms={setCurrentListFilms}\n              />\n            </Route>\n            <Route path=\"/films/\">\n              <Film />\n            </Route>\n            <Route path=\"/people/\">\n              <Character />\n            </Route>\n            <Route path=\"/planets/\">\n              <Planet />\n            </Route>\n            <Route path=\"/species/\">\n              <Specie />\n            </Route>\n            <Route path=\"/starships/\">\n              <Starship />\n            </Route>\n            <Route path=\"/vehicles/\">\n              <Vehicle />\n            </Route>\n          </Switch>\n        ) : <Loader />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}