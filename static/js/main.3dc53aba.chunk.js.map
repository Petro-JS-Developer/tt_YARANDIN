{"version":3,"sources":["Components/Loader/Loader.jsx","api/index.js","Components/ListFilms/ListFilms.jsx","Components/Film/Film.jsx","Components/Character/Character.jsx","Components/Planet/Planet.jsx","Components/Specie/Specie.jsx","Components/Starship/Starship.jsx","Components/Vehicle/Vehicle.jsx","App.jsx","index.js"],"names":["Loader","className","BASE_URL","getData","url","id","fetch","ListFilms","currentListFilms","setCurrentListFilms","getNewObject","useState","directionSortTable","setDirectionSortTable","type","onClick","sort","a","b","title","localeCompare","map","film","i","to","episode_id","Film","opening_crawl","director","producer","release_date","characters","planets","starships","vehicles","species","src","alt","item","slice","length","defaultProps","Character","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","films","Planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","Specie","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","people","Starship","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","Vehicle","vehicle_class","App","allFilms","setAllFilms","query","setQuery","selectedObject","setSelectedObject","isLoading","setIsLoading","history","useHistory","then","res","json","useEffect","results","window","location","pathname","filter","toLowerCase","includes","listen","placeholder","value","onChange","event","target","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8YAGaA,EAAS,kBACpB,qCACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,sBAEjB,qBAAKA,UAAU,OAAf,4BCREC,EAAW,wBAEJC,EAAU,eAACC,EAAD,uDAAO,GAAIC,EAAX,uDAAgB,GAAhB,OAAuBC,MAAM,GAAD,OAAIJ,GAAJ,OAAeE,EAAf,YAAsBC,K,QCG5DE,G,MAAY,SAAC,GAInB,IAHLC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,aACI,EACgDC,mBAAS,OADzD,mBACGC,EADH,KACuBC,EADvB,KAeJ,OACE,qBAAIZ,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,wBACA,wBAAQa,KAAK,SAASb,UAAU,YAAYc,QAf9B,WACW,SAAvBH,GACFH,EAAoB,YAAID,EAAiBQ,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEC,MACxDC,cAAcH,EAAEE,YACnBN,EAAsB,SAEtBJ,EAAoB,YAAID,EAAiBQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,MACxDC,cAAcF,EAAEC,YACnBN,EAAsB,UAOtB,wBACCL,EAAiBa,KAAI,SAACC,EAAMC,GAAP,OACpB,oBAAItB,UAAU,mBAAd,SACE,cAAC,IAAD,CAAMuB,GAAE,iBAAYD,EAAI,GAAKtB,UAAU,YAAYc,QAAS,kBAAML,EAAa,UAAD,OAAWa,EAAI,KAA7F,SAAoGD,EAAKH,SADrEG,EAAKG,oBCvBtCC,G,MAAO,SAAC,GAAD,IAClBP,EADkB,EAClBA,MACAM,EAFkB,EAElBA,WACAE,EAHkB,EAGlBA,cACAC,EAJkB,EAIlBA,SACAC,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,aACAC,EAPkB,EAOlBA,WACAC,EARkB,EAQlBA,QACAC,EATkB,EASlBA,UACAC,EAVkB,EAUlBA,SACAC,EAXkB,EAWlBA,QAXkB,OAalB,sBAAKlC,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAOkB,QAIX,qBAAIlB,UAAU,aAAd,UACE,+BACE,4CACCwB,KAEH,+BACE,gDACCE,KAEH,+BACE,6CACCC,KAEH,+BACE,6CACCC,KAEH,+BACE,iDACCC,IAFMA,GAIT,+BACE,+CACCC,EAAWV,KAAI,SAACiB,GAAD,OACd,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjC1B,KAAK,SACLb,UAAU,WAHZ,SAMGqC,GAFIA,EAAKC,MAAM,GAAID,EAAKE,OAAS,UAMxC,+BACE,4CACCR,EAAQX,KAAI,SAACiB,GAAD,OACX,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjC1B,KAAK,SACLb,UAAU,WAHZ,SAMGqC,GAFIA,EAAKC,MAAM,GAAID,EAAKE,OAAS,UAMxC,+BACE,8CACCP,EAAUZ,KAAI,SAACiB,GAAD,OACb,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjC1B,KAAK,SACLb,UAAU,WAHZ,SAMGqC,GAFIA,EAAKC,MAAM,GAAID,EAAKE,OAAS,UAMxC,+BACE,6CACCN,EAASb,KAAI,SAACiB,GAAD,OACZ,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjC1B,KAAK,SACLb,UAAU,WAHZ,SAMGqC,GAFIA,EAAKC,MAAM,GAAID,EAAKE,OAAS,UAMxC,+BACE,4CACCL,EAAQd,KAAI,SAACiB,GAAD,OACX,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjC1B,KAAK,SACLb,UAAU,WAHZ,SAMGqC,GAFIA,EAAKC,MAAM,GAAID,EAAKE,OAAS,qBAyBhDd,EAAKe,aAAe,CAClBV,WAAY,GACZC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,QAAS,I,UCxIEO,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,KACAC,EAFuB,EAEvBA,OACAC,EAHuB,EAGvBA,KACAC,EAJuB,EAIvBA,WACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,UACAC,EAPuB,EAOvBA,WACAC,EARuB,EAQvBA,OACAC,EATuB,EASvBA,UACAC,EAVuB,EAUvBA,MACAjB,EAXuB,EAWvBA,QACAD,EAZuB,EAYvBA,SACAD,EAbuB,EAavBA,UAbuB,OAevB,sBAAKhC,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAO0C,QAIX,qBAAI1C,UAAU,aAAd,UACE,+BACE,2CACC2C,KAEH,+BACE,yCACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,8CACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,2CACCC,KAEH,+BACE,8CAWCC,KAEH,+BACE,0CACCC,EAAM/B,KAAI,SAACiB,GAAD,OACT,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,WAMtB,+BACE,8CACCN,EAAUZ,KAAI,SAACiB,GAAD,OACb,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,WAMtB,+BACE,6CACCL,EAASb,KAAI,SAACiB,GAAD,OACZ,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,QANtB,OAaA,+BACE,4CACCJ,EAAQd,KAAI,SAACiB,GAAD,OACX,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,qBA2B9BG,EAAUD,aAAe,CACvBW,MAAO,GACPnB,UAAW,GACXC,SAAU,GACVC,QAAS,I,UCjJEkB,EAAS,SAAC,GAAD,IACpBV,EADoB,EACpBA,KACAW,EAFoB,EAEpBA,gBACAC,EAHoB,EAGpBA,eACAC,EAJoB,EAIpBA,SACAC,EALoB,EAKpBA,QACAC,EANoB,EAMpBA,QACAC,EAPoB,EAOpBA,QACAC,EARoB,EAQpBA,cACAC,EAToB,EASpBA,WACAC,EAVoB,EAUpBA,UACAV,EAXoB,EAWpBA,MAXoB,OAapB,sBAAKnD,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAO0C,QAIX,qBAAI1C,UAAU,aAAd,UACE,+BACE,oDACCqD,KAEH,+BACE,mDACCC,KAEH,+BACE,6CACCC,KAEH,+BACE,4CACCC,KAEH,+BACE,4CACCC,KAEH,+BACE,4CACCC,KAEH,+BACE,kDACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,8CACCC,EAAUzC,KAAI,SAACiB,GAAD,OACb,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,QANtB,OAaA,+BACE,0CACCa,EAAM/B,KAAI,SAACiB,GAAD,OACT,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,qBAyB9Bc,EAAOZ,aAAe,CACpBW,MAAO,GACPU,UAAW,I,UCzGAC,EAAS,SAAC,GAAD,IACpBpB,EADoB,EACpBA,KACAqB,EAFoB,EAEpBA,eACAC,EAHoB,EAGpBA,YACAC,EAJoB,EAIpBA,eACAC,EALoB,EAKpBA,YACAC,EANoB,EAMpBA,YACAC,EAPoB,EAOpBA,WACAC,EARoB,EAQpBA,iBACAnB,EAToB,EASpBA,UACAoB,EAVoB,EAUpBA,SACAC,EAXoB,EAWpBA,OACApB,EAZoB,EAYpBA,MAZoB,OAcpB,sBAAKnD,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAO0C,QAIX,qBAAI1C,UAAU,aAAd,UACE,+BACE,mDACC+D,KAEH,+BACE,gDACCC,KAEH,+BACE,mDACCC,KAEH,+BACE,gDACCC,KAEH,+BACE,gDACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,qDACCC,KAEH,+BACE,+CAQCnB,KAEH,+BACE,6CACCoB,KAEH,+BACE,2CACCC,EAAOnD,KAAI,SAACiB,GAAD,OACV,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,QAKnB,OAEH,+BACE,0CACCa,EAAM/B,KAAI,SAACiB,GAAD,OACT,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,qBA0B9BwB,EAAOtB,aAAe,CACpBW,MAAO,GACPoB,OAAQ,I,UCtHGC,EAAW,SAAC,GAAD,IACtB9B,EADsB,EACtBA,KACA+B,EAFsB,EAEtBA,MACAC,EAHsB,EAGtBA,aACAC,EAJsB,EAItBA,gBACApC,EALsB,EAKtBA,OACAqC,EANsB,EAMtBA,uBACAC,EAPsB,EAOtBA,KACAC,EARsB,EAQtBA,WACAC,EATsB,EAStBA,eACAC,EAVsB,EAUtBA,YACAC,EAXsB,EAWtBA,kBACAC,EAZsB,EAYtBA,KACAC,EAbsB,EAatBA,eACAC,EAdsB,EActBA,OACAjC,EAfsB,EAetBA,MAfsB,OAiBtB,sBAAKnD,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAO0C,QAIX,qBAAI1C,UAAU,aAAd,UACE,+BACE,0CACCyE,KAEH,+BACE,iDACCC,KAEH,+BACE,oDACCC,KAEH,+BACE,2CACCpC,KAEH,+BACE,2DACCqC,KAEH,+BACE,yCACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,mDACCC,KAEH,+BACE,gDACCC,KAEH,+BACE,sDACCC,KAEH,+BACE,yCACCC,KAEH,+BACE,mDACCC,KAEH,+BACE,2CACCC,EAAOhE,KAAI,SAACiB,GAAD,OACV,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,QANtB,OAaA,+BACE,0CACCa,EAAM/B,KAAI,SAACiB,GAAD,OACT,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,qBA6B9BkC,EAAShC,aAAe,CACtBW,MAAO,GACPiC,OAAQ,I,UCjIGC,EAAU,SAAC,GAAD,IACrB3C,EADqB,EACrBA,KACA+B,EAFqB,EAErBA,MACAC,EAHqB,EAGrBA,aACAC,EAJqB,EAIrBA,gBACApC,EALqB,EAKrBA,OACAqC,EANqB,EAMrBA,uBACAC,EAPqB,EAOrBA,KACAC,EARqB,EAQrBA,WACAC,EATqB,EASrBA,eACAC,EAVqB,EAUrBA,YACAM,EAXqB,EAWrBA,cACAF,EAZqB,EAYrBA,OACAjC,EAbqB,EAarBA,MAbqB,OAerB,sBAAKnD,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKmC,IAAI,yCAAyCC,IAAI,2EAG1D,sBAAKpC,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,SACE,8BACE,+BAAO0C,QAIX,qBAAI1C,UAAU,aAAd,UACE,+BACE,0CACCyE,KAEH,+BACE,iDACCC,KAEH,+BACE,oDACCC,KAEH,+BACE,2CACCpC,KAEH,+BACE,2DACCqC,KAEH,+BACE,yCACCC,KAEH,+BACE,+CACCC,KAEH,+BACE,mDACCC,KAEH,+BACE,gDACCC,KAEH,+BACE,kDACCM,KAEH,+BACE,2CACCF,EAAOhE,KAAI,SAACiB,GAAD,OACV,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,QANtB,OAaA,+BACE,0CACCa,EAAM/B,KAAI,SAACiB,GAAD,OACT,cAAC,IAAD,CACEd,GAAIc,EAAKC,MAAM,GAAID,EAAKE,OAAS,GACjCvC,UAAU,WAFZ,SAKGqC,GAFIA,EAAKC,MAAM,qBA2B9B+C,EAAQ7C,aAAe,CACrBW,MAAO,GACPiC,OAAQ,ICvBKG,MAlFf,WAAgB,IAAD,EACmB7E,mBAAS,IAD5B,mBACN8E,EADM,KACIC,EADJ,OAEmC/E,mBAAS,IAF5C,mBAENH,EAFM,KAEYC,EAFZ,OAGaE,mBAAS,IAHtB,mBAGNgF,EAHM,KAGCC,EAHD,OAI+BjF,mBAAS,IAJxC,mBAINkF,EAJM,KAIUC,EAJV,OAKqBnF,oBAAS,GAL9B,mBAKNoF,EALM,KAKKC,EALL,KAMPC,EAAUC,cAEVxF,EAAe,SAACN,GACpB4F,GAAa,GACb7F,EAAQC,GACL+F,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLN,EAAkBM,MAEtBJ,GAAa,IA0Bf,OAvBAM,qBAAU,WACRnG,EAAQ,UACLgG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL3F,EAAoB2F,EAAIG,SACxBb,EAAYU,EAAIG,YAGpB7F,EAAa8F,OAAOC,SAASC,YAC5B,IAEHJ,qBAAU,WACR7F,EAAoBgF,EAASkB,QAAO,qBAClCxF,MAEQyF,cACLC,SAASlB,EAAMiB,qBACnB,CAACjB,IAEJW,qBAAU,kBAAML,EAAQa,QAAO,SAACL,GAC9B/F,EAAa+F,EAASC,eACpB,CAACT,IAGH,qBAAKhG,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,uBAAOA,UAAU,SAASa,KAAK,SAAS6B,KAAK,aAAatC,GAAG,GAAG0G,YAAY,qBAAqBC,MAAOrB,EAAOsB,SAAU,SAACC,GAAD,OAAWtB,EAASsB,EAAMC,OAAOH,UACzJjB,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACE7G,iBAAkBA,EAClBC,oBAAqBA,EACrBqF,kBAAmBA,EACnBpF,aAAcA,MAGlB,cAAC,IAAD,CAAO2G,KAAK,UAAZ,SACE,cAAC,EAAD,2BAAUxB,GAAV,IAA0BnF,aAAcA,OAE1C,cAAC,IAAD,CAAO2G,KAAK,WAAZ,SACE,cAAC,EAAD,2BAAexB,GAAf,IAA+BnF,aAAcA,OAE/C,cAAC,IAAD,CAAO2G,KAAK,YAAZ,SACE,cAAC,EAAD,2BAAYxB,GAAZ,IAA4BnF,aAAcA,OAE5C,cAAC,IAAD,CAAO2G,KAAK,YAAZ,SACE,cAAC,EAAD,2BAAYxB,GAAZ,IAA4BnF,aAAcA,OAE5C,cAAC,IAAD,CAAO2G,KAAK,cAAZ,SACE,cAAC,EAAD,2BAAcxB,GAAd,IAA8BnF,aAAcA,OAE9C,cAAC,IAAD,CAAO2G,KAAK,aAAZ,SACE,cAAC,EAAD,2BAAaxB,GAAb,IAA6BnF,aAAcA,UAG7C,cAAC,EAAD,UCrFZ4G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.3dc53aba.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.scss';\n\nexport const Loader = () => (\n  <>\n    <div className=\"Loader\">\n      <div className=\"Loader__content\" />\n    </div>\n    <div className=\"text\">Loading...</div>\n  </>\n\n);\n","const BASE_URL = 'https://swapi.dev/api';\n\nexport const getData = (url = '', id = '') => fetch(`${BASE_URL}${url}/${id}`);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './ListFilms.scss';\n\nexport const ListFilms = ({\n  currentListFilms,\n  setCurrentListFilms,\n  getNewObject,\n}) => {\n  const [directionSortTable, setDirectionSortTable] = useState('asc');\n\n  const sortFilms = () => {\n    if (directionSortTable === 'desc') {\n      setCurrentListFilms([...currentListFilms.sort((a, b) => (b.title\n        .localeCompare(a.title)))]);\n      setDirectionSortTable('asc');\n    } else {\n      setCurrentListFilms([...currentListFilms.sort((a, b) => (a.title\n        .localeCompare(b.title)))]);\n      setDirectionSortTable('desc');\n    }\n  };\n\n  return (\n    <ol className=\"listFilms\">\n      <h2 className=\"nameFilms\">Name films</h2>\n      <button type=\"button\" className=\"sortFilms\" onClick={sortFilms}>Sort films</button>\n      {currentListFilms.map((film, i) => (\n        <li className=\"listFilms__items\" key={film.episode_id}>\n          <Link to={`/films/${i + 1}`} className=\"tableCell\" onClick={() => getNewObject(`/films/${i + 1}`)}>{film.title}</Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nListFilms.propTypes = {\n  getNewObject: PropTypes.func.isRequired,\n  setCurrentListFilms: PropTypes.func.isRequired,\n  currentListFilms: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n  })).isRequired,\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './film.scss';\n\nexport const Film = ({\n  title,\n  episode_id,\n  opening_crawl,\n  director,\n  producer,\n  release_date,\n  characters,\n  planets,\n  starships,\n  vehicles,\n  species,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{title}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>Episode:</span>\n          {episode_id}\n        </li>\n        <li>\n          <span>Description:</span>\n          {opening_crawl}\n        </li>\n        <li>\n          <span>Director:</span>\n          {director}\n        </li>\n        <li>\n          <span>Producer:</span>\n          {producer}\n        </li>\n        <li key={release_date}>\n          <span>Release date:</span>\n          {release_date}\n        </li>\n        <li>\n          <span>Characters:</span>\n          {characters.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              type=\"button\"\n              className=\"linkItem\"\n              key={item.slice(20, item.length - 1)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Planets:</span>\n          {planets.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              type=\"button\"\n              className=\"linkItem\"\n              key={item.slice(20, item.length - 1)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Starships:</span>\n          {starships.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              type=\"button\"\n              className=\"linkItem\"\n              key={item.slice(20, item.length - 1)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Vehicles:</span>\n          {vehicles.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              type=\"button\"\n              className=\"linkItem\"\n              key={item.slice(20, item.length - 1)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Species:</span>\n          {species.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              type=\"button\"\n              className=\"linkItem\"\n              key={item.slice(20, item.length - 1)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nFilm.propTypes = {\n  title: PropTypes.string.isRequired,\n  episode_id: PropTypes.number.isRequired,\n  opening_crawl: PropTypes.string.isRequired,\n  director: PropTypes.string.isRequired,\n  producer: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.string),\n  planets: PropTypes.arrayOf(PropTypes.string),\n  starships: PropTypes.arrayOf(PropTypes.string),\n  vehicles: PropTypes.arrayOf(PropTypes.string),\n  species: PropTypes.arrayOf(PropTypes.string),\n};\n\nFilm.defaultProps = {\n  characters: [],\n  planets: [],\n  starships: [],\n  vehicles: [],\n  species: [],\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './character.scss';\n\nexport const Character = ({\n  name,\n  height,\n  mass,\n  hair_color,\n  skin_color,\n  eye_color,\n  birth_year,\n  gender,\n  homeworld,\n  films,\n  species,\n  vehicles,\n  starships,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{name}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>height:</span>\n          {height}\n        </li>\n        <li>\n          <span>mass:</span>\n          {mass}\n        </li>\n        <li>\n          <span>hair_color:</span>\n          {hair_color}\n        </li>\n        <li>\n          <span>skin_color:</span>\n          {skin_color}\n        </li>\n        <li>\n          <span>eye_color:</span>\n          {eye_color}\n        </li>\n        <li>\n          <span>birth_year:</span>\n          {birth_year}\n        </li>\n        <li>\n          <span>gender:</span>\n          {gender}\n        </li>\n        <li>\n          <span>homeworld:</span>\n          {/* <Link\n            to=\"/planets/\"\n            className=\"linkItem\"\n            onClick={() => {\n              getNewObject(homeworld.slice(21, homeworld.length - 1));\n            }}\n            key={homeworld.slice(20)}\n          >\n            {homeworld}\n          </Link> */}\n          {homeworld}\n        </li>\n        <li>\n          <span>Films:</span>\n          {films.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Starships:</span>\n          {starships.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n        <li>\n          <span>Vehicles:</span>\n          {vehicles.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n          .\n        </li>\n        <li>\n          <span>Species:</span>\n          {species.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nCharacter.propTypes = {\n  name: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  mass: PropTypes.string.isRequired,\n  hair_color: PropTypes.string.isRequired,\n  skin_color: PropTypes.string.isRequired,\n  eye_color: PropTypes.string.isRequired,\n  birth_year: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  homeworld: PropTypes.string.isRequired,\n  films: PropTypes.arrayOf(PropTypes.string),\n  starships: PropTypes.arrayOf(PropTypes.string),\n  vehicles: PropTypes.arrayOf(PropTypes.string),\n  species: PropTypes.arrayOf(PropTypes.string),\n};\n\nCharacter.defaultProps = {\n  films: [],\n  starships: [],\n  vehicles: [],\n  species: [],\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './planet.scss';\n\nexport const Planet = ({\n  name,\n  rotation_period,\n  orbital_period,\n  diameter,\n  climate,\n  gravity,\n  terrain,\n  surface_water,\n  population,\n  residents,\n  films,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{name}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>Rotation period:</span>\n          {rotation_period}\n        </li>\n        <li>\n          <span>Orbital period:</span>\n          {orbital_period}\n        </li>\n        <li>\n          <span>Diameter:</span>\n          {diameter}\n        </li>\n        <li>\n          <span>Climate:</span>\n          {climate}\n        </li>\n        <li>\n          <span>Gravity:</span>\n          {gravity}\n        </li>\n        <li>\n          <span>Terrain:</span>\n          {terrain}\n        </li>\n        <li>\n          <span>Surface_water:</span>\n          {surface_water}\n        </li>\n        <li>\n          <span>Population:</span>\n          {population}\n        </li>\n        <li>\n          <span>Residents:</span>\n          {residents.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n          .\n        </li>\n        <li>\n          <span>Films:</span>\n          {films.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nPlanet.propTypes = {\n  name: PropTypes.string.isRequired,\n  rotation_period: PropTypes.string.isRequired,\n  orbital_period: PropTypes.string.isRequired,\n  diameter: PropTypes.string.isRequired,\n  climate: PropTypes.string.isRequired,\n  gravity: PropTypes.string.isRequired,\n  terrain: PropTypes.string.isRequired,\n  surface_water: PropTypes.string.isRequired,\n  population: PropTypes.string.isRequired,\n  residents: PropTypes.arrayOf(PropTypes.string),\n  films: PropTypes.arrayOf(PropTypes.string),\n};\n\nPlanet.defaultProps = {\n  films: [],\n  residents: [],\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './specie.scss';\n\nexport const Specie = ({\n  name,\n  classification,\n  designation,\n  average_height,\n  skin_colors,\n  hair_colors,\n  eye_colors,\n  average_lifespan,\n  homeworld,\n  language,\n  people,\n  films,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{name}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>Classification:</span>\n          {classification}\n        </li>\n        <li>\n          <span>Designation:</span>\n          {designation}\n        </li>\n        <li>\n          <span>Average height:</span>\n          {average_height}\n        </li>\n        <li>\n          <span>Skin colors:</span>\n          {skin_colors}\n        </li>\n        <li>\n          <span>Hair colors:</span>\n          {hair_colors}\n        </li>\n        <li>\n          <span>Eye colors:</span>\n          {eye_colors}\n        </li>\n        <li>\n          <span>Average lifespan:</span>\n          {average_lifespan}\n        </li>\n        <li>\n          <span>Home world:</span>\n          {/* <Link\n            to=\"/planet\"\n            className=\"linkItem\"\n            key={homeworld.slice(20)}\n          >\n            {homeworld}\n          </Link> */}\n          {homeworld}\n        </li>\n        <li>\n          <span>language:</span>\n          {language}\n        </li>\n        <li>\n          <span>People:</span>\n          {people.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n          {' '}\n        </li>\n        <li>\n          <span>Films:</span>\n          {films.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nSpecie.propTypes = {\n  name: PropTypes.string.isRequired,\n  classification: PropTypes.string.isRequired,\n  designation: PropTypes.string.isRequired,\n  average_height: PropTypes.string.isRequired,\n  skin_colors: PropTypes.string.isRequired,\n  hair_colors: PropTypes.string.isRequired,\n  eye_colors: PropTypes.string.isRequired,\n  average_lifespan: PropTypes.string.isRequired,\n  homeworld: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n  people: PropTypes.arrayOf(PropTypes.string),\n  films: PropTypes.arrayOf(PropTypes.string),\n};\n\nSpecie.defaultProps = {\n  films: [],\n  people: [],\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './starship.scss';\n\nexport const Starship = ({\n  name,\n  model,\n  manufacturer,\n  cost_in_credits,\n  length,\n  max_atmosphering_speed,\n  crew,\n  passengers,\n  cargo_capacity,\n  consumables,\n  hyperdrive_rating,\n  MGLT,\n  starship_class,\n  pilots,\n  films,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{name}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>Model:</span>\n          {model}\n        </li>\n        <li>\n          <span>Manufacturer:</span>\n          {manufacturer}\n        </li>\n        <li>\n          <span>Cost in credits:</span>\n          {cost_in_credits}\n        </li>\n        <li>\n          <span>length:</span>\n          {length}\n        </li>\n        <li>\n          <span>Max atmosphering speed:</span>\n          {max_atmosphering_speed}\n        </li>\n        <li>\n          <span>Crew:</span>\n          {crew}\n        </li>\n        <li>\n          <span>Passengers:</span>\n          {passengers}\n        </li>\n        <li>\n          <span>Cargo capacity:</span>\n          {cargo_capacity}\n        </li>\n        <li>\n          <span>Consumables:</span>\n          {consumables}\n        </li>\n        <li>\n          <span>Hyperdrive rating:</span>\n          {hyperdrive_rating}\n        </li>\n        <li>\n          <span>MGLT:</span>\n          {MGLT}\n        </li>\n        <li>\n          <span>Starship class:</span>\n          {starship_class}\n        </li>\n        <li>\n          <span>Pilots:</span>\n          {pilots.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n          .\n        </li>\n        <li>\n          <span>Films:</span>\n          {films.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nStarship.propTypes = {\n  name: PropTypes.string.isRequired,\n  model: PropTypes.string.isRequired,\n  manufacturer: PropTypes.string.isRequired,\n  cost_in_credits: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n  max_atmosphering_speed: PropTypes.string.isRequired,\n  crew: PropTypes.string.isRequired,\n  passengers: PropTypes.string.isRequired,\n  cargo_capacity: PropTypes.string.isRequired,\n  consumables: PropTypes.string.isRequired,\n  hyperdrive_rating: PropTypes.string.isRequired,\n  MGLT: PropTypes.string.isRequired,\n  starship_class: PropTypes.string.isRequired,\n  pilots: PropTypes.arrayOf(PropTypes.string),\n  films: PropTypes.arrayOf(PropTypes.string),\n};\n\nStarship.defaultProps = {\n  films: [],\n  pilots: [],\n};\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './vehicle.scss';\n\nexport const Vehicle = ({\n  name,\n  model,\n  manufacturer,\n  cost_in_credits,\n  length,\n  max_atmosphering_speed,\n  crew,\n  passengers,\n  cargo_capacity,\n  consumables,\n  vehicle_class,\n  pilots,\n  films,\n}) => (\n  <div className=\"fcols fx-row\">\n    <div className=\"fLeft\">\n      <div className=\"fImg img-wide\">\n        <img src=\"https://uaserials.pro/posters/1352.jpg\" alt=\"Мандалорець\" />\n      </div>\n    </div>\n    <div className=\"fright fx-1 fx-col\">\n      <h1 className=\"short-title fx-1\">\n        <div>\n          <span>{name}</span>\n        </div>\n      </h1>\n\n      <ul className=\"short-list\">\n        <li>\n          <span>Model:</span>\n          {model}\n        </li>\n        <li>\n          <span>Manufacturer:</span>\n          {manufacturer}\n        </li>\n        <li>\n          <span>Cost in credits:</span>\n          {cost_in_credits}\n        </li>\n        <li>\n          <span>length:</span>\n          {length}\n        </li>\n        <li>\n          <span>Max atmosphering speed:</span>\n          {max_atmosphering_speed}\n        </li>\n        <li>\n          <span>Crew:</span>\n          {crew}\n        </li>\n        <li>\n          <span>Passengers:</span>\n          {passengers}\n        </li>\n        <li>\n          <span>Cargo capacity:</span>\n          {cargo_capacity}\n        </li>\n        <li>\n          <span>Consumables:</span>\n          {consumables}\n        </li>\n        <li>\n          <span>Vehicle class:</span>\n          {vehicle_class}\n        </li>\n        <li>\n          <span>Pilots:</span>\n          {pilots.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n          .\n        </li>\n        <li>\n          <span>Films:</span>\n          {films.map((item) => (\n            <Link\n              to={item.slice(20, item.length - 1)}\n              className=\"linkItem\"\n              key={item.slice(20)}\n            >\n              {item}\n            </Link>\n          ))}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nVehicle.propTypes = {\n  name: PropTypes.string.isRequired,\n  model: PropTypes.number.isRequired,\n  manufacturer: PropTypes.string.isRequired,\n  cost_in_credits: PropTypes.string.isRequired,\n  length: PropTypes.string.isRequired,\n  max_atmosphering_speed: PropTypes.string.isRequired,\n  crew: PropTypes.string.isRequired,\n  passengers: PropTypes.string.isRequired,\n  cargo_capacity: PropTypes.string.isRequired,\n  consumables: PropTypes.string.isRequired,\n  vehicle_class: PropTypes.string.isRequired,\n  pilots: PropTypes.arrayOf(PropTypes.string),\n  films: PropTypes.arrayOf(PropTypes.string),\n};\n\nVehicle.defaultProps = {\n  films: [],\n  pilots: [],\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\nimport { Loader } from './Components/Loader/Loader';\nimport { getData } from './api';\nimport { ListFilms } from './Components/ListFilms';\nimport { Film } from './Components/Film';\nimport { Character } from './Components/Character';\nimport { Planet } from './Components/Planet';\nimport { Specie } from './Components/Specie';\nimport { Starship } from './Components/Starship';\nimport { Vehicle } from './Components/Vehicle';\n\nfunction App() {\n  const [allFilms, setAllFilms] = useState([]);\n  const [currentListFilms, setCurrentListFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [selectedObject, setSelectedObject] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const getNewObject = (url) => {\n    setIsLoading(false);\n    getData(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSelectedObject(res);\n      });\n    setIsLoading(true);\n  };\n\n  useEffect(() => {\n    getData('/films')\n      .then((res) => res.json())\n      .then((res) => {\n        setCurrentListFilms(res.results);\n        setAllFilms(res.results);\n      });\n\n    getNewObject(window.location.pathname);\n  }, []);\n\n  useEffect(() => {\n    setCurrentListFilms(allFilms.filter(({\n      title,\n    }) => (\n      (title).toLowerCase()\n        .includes(query.toLowerCase()))));\n  }, [query]);\n\n  useEffect(() => history.listen((location) => {\n    getNewObject(location.pathname);\n  }), [history]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"title\">Star Wars</h1>\n        <input className=\"search\" type=\"search\" name=\"searchFilm\" id=\"\" placeholder=\"Search for a movie\" value={query} onChange={(event) => setQuery(event.target.value)} />\n        {isLoading ? (\n          <Switch>\n            <Route exact path=\"/\">\n              <ListFilms\n                currentListFilms={currentListFilms}\n                setCurrentListFilms={setCurrentListFilms}\n                setSelectedObject={setSelectedObject}\n                getNewObject={getNewObject}\n              />\n            </Route>\n            <Route path=\"/films/\">\n              <Film {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n            <Route path=\"/people/\">\n              <Character {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n            <Route path=\"/planets/\">\n              <Planet {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n            <Route path=\"/species/\">\n              <Specie {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n            <Route path=\"/starships/\">\n              <Starship {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n            <Route path=\"/vehicles/\">\n              <Vehicle {...selectedObject} getNewObject={getNewObject} />\n            </Route>\n          </Switch>\n        ) : <Loader />}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}